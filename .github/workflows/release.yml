name: Create Tag and Release

on:
  push:
    branches:
      - mainnet
  workflow_dispatch:
    inputs:
      version_type:
        description: "Choose the type of version increment"
        required: false
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Get latest tag
        id: get_latest_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $TAG"
          echo "LATEST_TAG=$TAG" >> $GITHUB_OUTPUT
      - name: Calculate new tag
        id: calc_new_tag
        run: |
          LATEST_TAG=${{ steps.get_latest_tag.outputs.LATEST_TAG }}
          echo "Current latest tag: $LATEST_TAG"
          VERSION_TYPE="${{ github.event.inputs.version_type || 'patch' }}"
          echo "Apply version type: $VERSION_TYPE"
          CLEAN_TAG=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_TAG"
          if [ "$VERSION_TYPE" == "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$VERSION_TYPE" == "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT
      - name: Create tag
        id: create_tag
        run: |
          NEW_TAG=${{ steps.calc_new_tag.outputs.NEW_TAG }}
          git tag -a "$NEW_TAG" -m "Release version $NEW_TAG"
          git push origin "$NEW_TAG"
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ steps.calc_new_tag.outputs.NEW_TAG }}"
          release_name: "Release ${{ steps.calc_new_tag.outputs.NEW_TAG }}"
          body: "Release notes for version ${{ steps.calc_new_tag.outputs.NEW_TAG }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}